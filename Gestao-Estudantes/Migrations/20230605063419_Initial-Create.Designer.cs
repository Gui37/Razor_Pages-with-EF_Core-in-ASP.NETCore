// <auto-generated />
using System;
using Gestao_Estudantes.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gestao_Estudantes.Migrations
{
    [DbContext(typeof(Gestao_EstudantesContext))]
    [Migration("20230605063419_Initial-Create")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CursoDocente", b =>
                {
                    b.Property<int>("CursosCursoID")
                        .HasColumnType("int");

                    b.Property<int>("DocentesId")
                        .HasColumnType("int");

                    b.HasKey("CursosCursoID", "DocentesId");

                    b.HasIndex("DocentesId");

                    b.ToTable("CursoDocente");
                });

            modelBuilder.Entity("Gestao_Estudantes.Models.AtribuicaoEscritorio", b =>
                {
                    b.Property<int>("DocenteID")
                        .HasColumnType("int");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DocenteID");

                    b.ToTable("AtribuicaoEscritorios");
                });

            modelBuilder.Entity("Gestao_Estudantes.Models.Curso", b =>
                {
                    b.Property<int>("CursoID")
                        .HasColumnType("int");

                    b.Property<int>("DepartamentoDepartmentoID")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentoID")
                        .HasColumnType("int");

                    b.Property<string>("NomeC")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Pontuacao")
                        .HasColumnType("int");

                    b.HasKey("CursoID");

                    b.HasIndex("DepartamentoDepartmentoID");

                    b.ToTable("Curso", (string)null);
                });

            modelBuilder.Entity("Gestao_Estudantes.Models.Departamento", b =>
                {
                    b.Property<int?>("DepartmentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("DepartmentoID"));

                    b.Property<int>("AdministradorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DoocenteID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Orcamento")
                        .HasColumnType("money");

                    b.HasKey("DepartmentoID");

                    b.HasIndex("AdministradorId");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("Gestao_Estudantes.Models.Docente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DataContrato")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nome");

                    b.HasKey("Id");

                    b.ToTable("Docente", (string)null);
                });

            modelBuilder.Entity("Gestao_Estudantes.Models.Estudante", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DataInscricao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Estudante", (string)null);
                });

            modelBuilder.Entity("Gestao_Estudantes.Models.EstudanteVM", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Apelido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataInscricao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("EstudanteVM");
                });

            modelBuilder.Entity("Gestao_Estudantes.Models.Inscricao", b =>
                {
                    b.Property<int>("InscricaoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InscricaoID"));

                    b.Property<int>("CursoID")
                        .HasColumnType("int");

                    b.Property<int>("EstudanteID")
                        .HasColumnType("int");

                    b.Property<int?>("Nota")
                        .HasColumnType("int");

                    b.HasKey("InscricaoID");

                    b.HasIndex("CursoID");

                    b.HasIndex("EstudanteID");

                    b.ToTable("Inscricaos");
                });

            modelBuilder.Entity("CursoDocente", b =>
                {
                    b.HasOne("Gestao_Estudantes.Models.Curso", null)
                        .WithMany()
                        .HasForeignKey("CursosCursoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestao_Estudantes.Models.Docente", null)
                        .WithMany()
                        .HasForeignKey("DocentesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestao_Estudantes.Models.AtribuicaoEscritorio", b =>
                {
                    b.HasOne("Gestao_Estudantes.Models.Docente", "Docente")
                        .WithOne("AtribuicaoEscritorio")
                        .HasForeignKey("Gestao_Estudantes.Models.AtribuicaoEscritorio", "DocenteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Docente");
                });

            modelBuilder.Entity("Gestao_Estudantes.Models.Curso", b =>
                {
                    b.HasOne("Gestao_Estudantes.Models.Departamento", "Departamento")
                        .WithMany("Cursos")
                        .HasForeignKey("DepartamentoDepartmentoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("Gestao_Estudantes.Models.Departamento", b =>
                {
                    b.HasOne("Gestao_Estudantes.Models.Docente", "Administrador")
                        .WithMany()
                        .HasForeignKey("AdministradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administrador");
                });

            modelBuilder.Entity("Gestao_Estudantes.Models.Inscricao", b =>
                {
                    b.HasOne("Gestao_Estudantes.Models.Curso", "Curso")
                        .WithMany("Inscricaos")
                        .HasForeignKey("CursoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestao_Estudantes.Models.Estudante", "Estudante")
                        .WithMany("Inscricaos")
                        .HasForeignKey("EstudanteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Estudante");
                });

            modelBuilder.Entity("Gestao_Estudantes.Models.Curso", b =>
                {
                    b.Navigation("Inscricaos");
                });

            modelBuilder.Entity("Gestao_Estudantes.Models.Departamento", b =>
                {
                    b.Navigation("Cursos");
                });

            modelBuilder.Entity("Gestao_Estudantes.Models.Docente", b =>
                {
                    b.Navigation("AtribuicaoEscritorio")
                        .IsRequired();
                });

            modelBuilder.Entity("Gestao_Estudantes.Models.Estudante", b =>
                {
                    b.Navigation("Inscricaos");
                });
#pragma warning restore 612, 618
        }
    }
}
